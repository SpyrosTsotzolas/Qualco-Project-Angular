{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/country-stats-filter.service\";\nimport * as i2 from \"../service/region.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CountryStatsFilterComponent_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const region_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", region_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(region_r2.name);\n  }\n}\nfunction CountryStatsFilterComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const countryStats_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(countryStats_r3.continent);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(countryStats_r3.region);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(countryStats_r3.country);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(countryStats_r3.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(countryStats_r3.population);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(countryStats_r3.gdp);\n  }\n}\nexport class CountryStatsFilterComponent {\n  constructor(countryStatsFilterService, regionService) {\n    this.countryStatsFilterService = countryStatsFilterService;\n    this.regionService = regionService;\n    this.selectedRegion = '';\n  }\n  ngOnInit() {\n    this.regionService.getRegions().subscribe(data => {\n      this.regions = data;\n    });\n    this.countryStatsFilterService.getCountryStatistics().subscribe(data => {\n      this.countryStats = data;\n    });\n    this.filteredData = this.countryStats;\n  }\n  filterData() {\n    this.filteredData = this.countryStats.filter(country => {\n      return (this.selectedRegion === '' || country.region === this.selectedRegion) && (!this.dateFrom || country.year >= this.dateFrom) && (!this.dateTo || country.year <= this.dateTo);\n    });\n  }\n}\n_class = CountryStatsFilterComponent;\n_class.ɵfac = function CountryStatsFilterComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.CountryStatsFilterService), i0.ɵɵdirectiveInject(i2.RegionService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-country-stats-filter\"]],\n  decls: 32,\n  vars: 5,\n  consts: [[1, \"filter-container\"], [\"for\", \"regionFilter\"], [\"id\", \"regionFilter\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"dateFrom\"], [\"type\", \"number\", \"id\", \"dateFrom\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"for\", \"dateTo\"], [\"type\", \"number\", \"id\", \"dateTo\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"card\", \"my-5\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [1, \"thead-dark\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n  template: function CountryStatsFilterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n      i0.ɵɵtext(2, \"Select Region:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function CountryStatsFilterComponent_Template_select_ngModelChange_3_listener($event) {\n        return ctx.selectedRegion = $event;\n      })(\"ngModelChange\", function CountryStatsFilterComponent_Template_select_ngModelChange_3_listener() {\n        return ctx.filterData();\n      });\n      i0.ɵɵelementStart(4, \"option\", 3);\n      i0.ɵɵtext(5, \"All Regions\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, CountryStatsFilterComponent_option_6_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 5);\n      i0.ɵɵtext(8, \"From:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CountryStatsFilterComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.dateFrom = $event;\n      })(\"input\", function CountryStatsFilterComponent_Template_input_input_9_listener() {\n        return ctx.filterData();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 7);\n      i0.ɵɵtext(11, \"To:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CountryStatsFilterComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.dateTo = $event;\n      })(\"input\", function CountryStatsFilterComponent_Template_input_input_12_listener() {\n        return ctx.filterData();\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 9)(14, \"div\", 10)(15, \"table\", 11)(16, \"thead\", 12)(17, \"tr\")(18, \"th\");\n      i0.ɵɵtext(19, \"Continent\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Region\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"th\");\n      i0.ɵɵtext(23, \"Country\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"th\");\n      i0.ɵɵtext(25, \"Year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\");\n      i0.ɵɵtext(27, \"Population\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\");\n      i0.ɵɵtext(29, \"GDP\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"tbody\");\n      i0.ɵɵtemplate(31, CountryStatsFilterComponent_tr_31_Template, 13, 6, \"tr\", 13);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedRegion);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.regions);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.dateFrom);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.dateTo);\n      i0.ɵɵadvance(19);\n      i0.ɵɵproperty(\"ngForOf\", ctx.filteredData);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n  styles: [\".filter-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 20px;\\n  }\\n  \\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY291bnRyeS1zdGF0cy1maWx0ZXIvY291bnRyeS1zdGF0cy1maWx0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0lBQ25CLG1CQUFtQjtFQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5maWx0ZXItY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","region_r2","name","ɵɵadvance","ɵɵtextInterpolate","countryStats_r3","continent","region","country","year","population","gdp","CountryStatsFilterComponent","constructor","countryStatsFilterService","regionService","selectedRegion","ngOnInit","getRegions","subscribe","data","regions","getCountryStatistics","countryStats","filteredData","filterData","filter","dateFrom","dateTo","ɵɵdirectiveInject","i1","CountryStatsFilterService","i2","RegionService","selectors","decls","vars","consts","template","CountryStatsFilterComponent_Template","rf","ctx","ɵɵlistener","CountryStatsFilterComponent_Template_select_ngModelChange_3_listener","$event","ɵɵtemplate","CountryStatsFilterComponent_option_6_Template","CountryStatsFilterComponent_Template_input_ngModelChange_9_listener","CountryStatsFilterComponent_Template_input_input_9_listener","CountryStatsFilterComponent_Template_input_ngModelChange_12_listener","CountryStatsFilterComponent_Template_input_input_12_listener","CountryStatsFilterComponent_tr_31_Template"],"sources":["/home/user/Desktop/demo/my-app/src/app/country-stats-filter/country-stats-filter.component.ts","/home/user/Desktop/demo/my-app/src/app/country-stats-filter/country-stats-filter.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\nimport { Region } from '../model/region';\nimport { CountryStatsFilterService } from '../service/country-stats-filter.service';\nimport { CountryStatsFilter } from '../model/country-stats-filter';\nimport { RegionService } from '../service/region.service';\n\n@Component({\n  selector: 'app-country-stats-filter',\n  templateUrl: './country-stats-filter.component.html',\n  styleUrls: ['./country-stats-filter.component.css']\n})\nexport class CountryStatsFilterComponent implements OnInit {\n\n  regions: Region[]; \n  countryStats: CountryStatsFilter[]; \n  filteredData: CountryStatsFilter[]; \n  selectedRegion: string = '';\n  dateFrom: number;\n  dateTo: number;\n\n  constructor(private countryStatsFilterService: CountryStatsFilterService, private regionService: RegionService) { }\n\n  ngOnInit(): void {\n    this.regionService.getRegions().subscribe(data => {\n      this.regions = data;\n    });\n    this.countryStatsFilterService.getCountryStatistics().subscribe(data => {\n      this.countryStats = data;\n    });\n    this.filteredData = this.countryStats; \n  }\n\n  filterData(): void {\n    this.filteredData = this.countryStats.filter(country => {\n      return (\n        (this.selectedRegion === '' || country.region === this.selectedRegion) &&\n        (!this.dateFrom || country.year >= this.dateFrom) &&\n        (!this.dateTo || country.year <= this.dateTo)\n      );\n    });\n  }\n\n}\n","<div class=\"filter-container\">\n    <label for=\"regionFilter\">Select Region:</label>\n    <select id=\"regionFilter\" [(ngModel)]=\"selectedRegion\" (ngModelChange)=\"filterData()\">\n      <option value=\"\">All Regions</option>\n      <option *ngFor=\"let region of regions\" [value]=\"region.name\">{{ region.name }}</option>\n    </select>\n    <label for=\"dateFrom\">From:</label>\n    <input type=\"number\" id=\"dateFrom\" [(ngModel)]=\"dateFrom\" (input)=\"filterData()\">\n    <label for=\"dateTo\">To:</label>\n    <input type=\"number\" id=\"dateTo\" [(ngModel)]=\"dateTo\" (input)=\"filterData()\">\n</div>\n  \n  <div class=\"card my-5\">\n    <div class=\"card-body\">\n      <table class=\"table table-bordered table-striped\">\n        <thead class=\"thead-dark\">\n            <tr>\n            <th>Continent</th>\n            <th>Region</th>\n            <th>Country</th>\n            <th>Year</th>\n            <th>Population</th>\n            <th>GDP</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let countryStats of filteredData\">\n            <td>{{ countryStats.continent }}</td>\n            <td>{{ countryStats.region }}</td>\n            <td>{{ countryStats.country }}</td>\n            <td>{{ countryStats.year }}</td>\n            <td>{{ countryStats.population }}</td>\n            <td>{{ countryStats.gdp }}</td>\n            </tr>\n        </tbody>\n    </table>\n  </div>\n</div>\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}